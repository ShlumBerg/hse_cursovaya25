# Generated by Django 5.2.6 on 2025-09-17 16:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Credit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                (
                    "term",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MaxValueValidator(999),
                            django.core.validators.MinValueValidator(0),
                        ]
                    ),
                ),
                ("yearlypercents", models.FloatField()),
                ("dailypennies", models.FloatField()),
                ("totalbase", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Кредит",
                "verbose_name_plural": "Кредиты",
            },
        ),
        migrations.CreateModel(
            name="FizClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("passport", models.CharField(max_length=10, unique=True)),
                (
                    "nbkiRating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(999),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "okbRating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(999),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "bkiCreditInfoRating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(999),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "bkiSBRating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(999),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                ("dti", models.FloatField(blank=True, null=True)),
                ("revolbal", models.FloatField(blank=True, null=True)),
                (
                    "mthssincerecentbc",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("bcutil", models.FloatField(blank=True, null=True)),
                ("revolutil", models.FloatField(blank=True, null=True)),
                ("annualinc", models.FloatField()),
                ("avgcurbal", models.FloatField()),
                ("totalacc", models.PositiveIntegerField()),
                ("accopenpast24mths", models.PositiveIntegerField()),
                ("totalbclimit", models.FloatField()),
                ("totalilhighcreditlimit", models.FloatField()),
                ("totalilrevhilim", models.FloatField()),
                ("emplength", models.PositiveIntegerField()),
                ("totalbalexmort", models.FloatField()),
                ("bcopentobuy", models.FloatField()),
                ("infoupdatedate", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Физическое лицо",
                "verbose_name_plural": "Физические лица",
            },
        ),
        migrations.CreateModel(
            name="RatingAcra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="RatingExpert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="RatingNcr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="RatingNra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="CreditPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("periodStart", models.DateField()),
                ("periodEnd", models.DateField()),
                ("baseatstart", models.FloatField()),
                ("totalpercents", models.FloatField()),
                ("paidpercents", models.FloatField(default=0.0)),
                ("unpaidpercents", models.FloatField()),
                ("totalbase", models.FloatField()),
                ("paidbase", models.FloatField(default=0.0)),
                ("unpaidbase", models.FloatField()),
                ("totalpennies", models.FloatField(default=0.0)),
                ("paidpennies", models.FloatField(default=0.0)),
                ("unpaidpennies", models.FloatField(default=0.0)),
                ("currentlypaid", models.FloatField(default=0.0)),
                ("currentlyunpaid", models.FloatField()),
                ("totalpayment", models.FloatField()),
                ("updatedate", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "credit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="credit.credit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Плановый платеж по кредиту",
                "verbose_name_plural": "Плановые платежи по кредитам",
            },
        ),
        migrations.CreateModel(
            name="CreditPayoff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("penniespayment", models.FloatField(default=0.0)),
                ("percentspayment", models.FloatField(default=0.0)),
                ("basepaymentscheduled", models.FloatField(default=0.0)),
                ("basepaymentearly", models.FloatField(default=0.0)),
                ("totalPayment", models.FloatField(default=0.0)),
                ("payoffTime", models.DateTimeField(auto_now_add=True)),
                (
                    "credit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payoffs",
                        to="credit.credit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Выплата по кредиту",
                "verbose_name_plural": "Выплаты по кредитам",
            },
        ),
        migrations.AddField(
            model_name="credit",
            name="fiz_client",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="credits",
                to="credit.fizclient",
            ),
        ),
        migrations.CreateModel(
            name="Pledge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vinCode", models.CharField(blank=True, max_length=17, null=True)),
                (
                    "cadastralNumber",
                    models.CharField(blank=True, max_length=28, null=True),
                ),
                ("expectedPrice", models.PositiveBigIntegerField()),
                (
                    "credit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pledges",
                        to="credit.credit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Залог",
                "verbose_name_plural": "Залоги",
            },
        ),
        migrations.CreateModel(
            name="UrClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ogrn", models.CharField(max_length=13, unique=True)),
                ("str2300", models.BigIntegerField()),
                ("str1300", models.BigIntegerField()),
                ("str2400", models.BigIntegerField()),
                ("str2110pred", models.PositiveBigIntegerField()),
                ("str1520", models.PositiveBigIntegerField()),
                ("str1230", models.PositiveBigIntegerField()),
                ("str1510", models.PositiveBigIntegerField()),
                ("str2110", models.PositiveBigIntegerField()),
                ("str1250", models.PositiveBigIntegerField()),
                ("str1400", models.PositiveBigIntegerField()),
                ("str1500", models.PositiveBigIntegerField()),
                ("str1600", models.PositiveBigIntegerField()),
                ("str1100", models.PositiveBigIntegerField()),
                ("str1200", models.PositiveBigIntegerField()),
                ("str1550", models.PositiveBigIntegerField()),
                ("str1600pred", models.PositiveBigIntegerField()),
                ("infoupdatedate", models.DateTimeField(auto_now=True)),
                (
                    "ratingacra",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="clients",
                        to="credit.ratingacra",
                    ),
                ),
                (
                    "ratingexpert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="clients",
                        to="credit.ratingexpert",
                    ),
                ),
                (
                    "ratingncr",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="clients",
                        to="credit.ratingncr",
                    ),
                ),
                (
                    "ratingnra",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="clients",
                        to="credit.ratingnra",
                    ),
                ),
            ],
            options={
                "verbose_name": "Юридическое лицо",
                "verbose_name_plural": "Юридические лица",
            },
        ),
        migrations.AddField(
            model_name="credit",
            name="ur_client",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="credits",
                to="credit.urclient",
            ),
        ),
        migrations.AddConstraint(
            model_name="credit",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(
                        ("fiz_client__isnull", False), ("ur_client__isnull", True)
                    ),
                    models.Q(
                        ("fiz_client__isnull", True), ("ur_client__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="ur_client_or_fiz_client",
            ),
        ),
    ]
