// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from './client';
import type { AuthTokenLoginCreateData, AuthTokenLoginCreateResponses, AuthTokenLogoutCreateData, AuthTokenLogoutCreateResponses, AuthUsersListData, AuthUsersListResponses, AuthUsersCreateData, AuthUsersCreateResponses, AuthUsersDestroyData, AuthUsersDestroyResponses, AuthUsersRetrieveData, AuthUsersRetrieveResponses, AuthUsersPartialUpdateData, AuthUsersPartialUpdateResponses, AuthUsersUpdateData, AuthUsersUpdateResponses, AuthUsersActivationCreateData, AuthUsersActivationCreateResponses, AuthUsersMeDestroyData, AuthUsersMeDestroyResponses, AuthUsersMeRetrieveData, AuthUsersMeRetrieveResponses, AuthUsersMePartialUpdateData, AuthUsersMePartialUpdateResponses, AuthUsersMeUpdateData, AuthUsersMeUpdateResponses, AuthUsersResendActivationCreateData, AuthUsersResendActivationCreateResponses, AuthUsersResetPasswordCreateData, AuthUsersResetPasswordCreateResponses, AuthUsersResetPasswordConfirmCreateData, AuthUsersResetPasswordConfirmCreateResponses, AuthUsersResetUsernameCreateData, AuthUsersResetUsernameCreateResponses, AuthUsersResetUsernameConfirmCreateData, AuthUsersResetUsernameConfirmCreateResponses, AuthUsersSetPasswordCreateData, AuthUsersSetPasswordCreateResponses, AuthUsersSetUsernameCreateData, AuthUsersSetUsernameCreateResponses, CreditCheckFizClientCreditworthinessCreateData, CreditCheckFizClientCreditworthinessCreateResponses, CreditCreateCreditPayoffCreateData, CreditCreateCreditPayoffCreateResponses, CreditCreditListData, CreditCreditListResponses, CreditCreditCreateData, CreditCreditCreateResponses, CreditCreditPaymentListData, CreditCreditPaymentListResponses, CreditCreditPaymentCreateData, CreditCreditPaymentCreateResponses, CreditCreditPaymentDestroyData, CreditCreditPaymentDestroyResponses, CreditCreditPaymentRetrieveData, CreditCreditPaymentRetrieveResponses, CreditCreditPaymentPartialUpdateData, CreditCreditPaymentPartialUpdateResponses, CreditCreditPaymentUpdateData, CreditCreditPaymentUpdateResponses, CreditCreditPayoffListData, CreditCreditPayoffListResponses, CreditCreditPayoffCreateData, CreditCreditPayoffCreateResponses, CreditCreditPayoffDestroyData, CreditCreditPayoffDestroyResponses, CreditCreditPayoffRetrieveData, CreditCreditPayoffRetrieveResponses, CreditCreditPayoffPartialUpdateData, CreditCreditPayoffPartialUpdateResponses, CreditCreditPayoffUpdateData, CreditCreditPayoffUpdateResponses, CreditCreditDestroyData, CreditCreditDestroyResponses, CreditCreditRetrieveData, CreditCreditRetrieveResponses, CreditCreditPartialUpdateData, CreditCreditPartialUpdateResponses, CreditCreditUpdateData, CreditCreditUpdateResponses, CreditFizClientListData, CreditFizClientListResponses, CreditFizClientCreateData, CreditFizClientCreateResponses, CreditFizClientDestroyData, CreditFizClientDestroyResponses, CreditFizClientRetrieveData, CreditFizClientRetrieveResponses, CreditFizClientPartialUpdateData, CreditFizClientPartialUpdateResponses, CreditFizClientUpdateData, CreditFizClientUpdateResponses, CreditPledgeListData, CreditPledgeListResponses, CreditPledgeCreateData, CreditPledgeCreateResponses, CreditPledgeDestroyData, CreditPledgeDestroyResponses, CreditPledgeRetrieveData, CreditPledgeRetrieveResponses, CreditPledgePartialUpdateData, CreditPledgePartialUpdateResponses, CreditPledgeUpdateData, CreditPledgeUpdateResponses, CreditRatingAcraListData, CreditRatingAcraListResponses, CreditRatingAcraCreateData, CreditRatingAcraCreateResponses, CreditRatingAcraDestroyData, CreditRatingAcraDestroyResponses, CreditRatingAcraRetrieveData, CreditRatingAcraRetrieveResponses, CreditRatingAcraPartialUpdateData, CreditRatingAcraPartialUpdateResponses, CreditRatingAcraUpdateData, CreditRatingAcraUpdateResponses, CreditRatingExpertListData, CreditRatingExpertListResponses, CreditRatingExpertCreateData, CreditRatingExpertCreateResponses, CreditRatingExpertDestroyData, CreditRatingExpertDestroyResponses, CreditRatingExpertRetrieveData, CreditRatingExpertRetrieveResponses, CreditRatingExpertPartialUpdateData, CreditRatingExpertPartialUpdateResponses, CreditRatingExpertUpdateData, CreditRatingExpertUpdateResponses, CreditRatingNcrListData, CreditRatingNcrListResponses, CreditRatingNcrCreateData, CreditRatingNcrCreateResponses, CreditRatingNcrDestroyData, CreditRatingNcrDestroyResponses, CreditRatingNcrRetrieveData, CreditRatingNcrRetrieveResponses, CreditRatingNcrPartialUpdateData, CreditRatingNcrPartialUpdateResponses, CreditRatingNcrUpdateData, CreditRatingNcrUpdateResponses, CreditRatingNraListData, CreditRatingNraListResponses, CreditRatingNraCreateData, CreditRatingNraCreateResponses, CreditRatingNraDestroyData, CreditRatingNraDestroyResponses, CreditRatingNraRetrieveData, CreditRatingNraRetrieveResponses, CreditRatingNraPartialUpdateData, CreditRatingNraPartialUpdateResponses, CreditRatingNraUpdateData, CreditRatingNraUpdateResponses, CreditRestructureCreditCreateData, CreditRestructureCreditCreateResponses, CreditUrClientListData, CreditUrClientListResponses, CreditUrClientCreateData, CreditUrClientCreateResponses, CreditUrClientDestroyData, CreditUrClientDestroyResponses, CreditUrClientRetrieveData, CreditUrClientRetrieveResponses, CreditUrClientPartialUpdateData, CreditUrClientPartialUpdateResponses, CreditUrClientUpdateData, CreditUrClientUpdateResponses, SchemaRetrieveData, SchemaRetrieveResponses } from './types.gen';
import { client } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Use this endpoint to obtain user authentication token.
 */
export const authTokenLoginCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthTokenLoginCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<AuthTokenLoginCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/token/login/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Use this endpoint to logout user (remove user authentication token).
 */
export const authTokenLogoutCreate = <ThrowOnError extends boolean = false>(options?: Options<AuthTokenLogoutCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<AuthTokenLogoutCreateResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/token/logout/',
        ...options
    });
};

export const authUsersList = <ThrowOnError extends boolean = false>(options?: Options<AuthUsersListData, ThrowOnError>) => {
    return (options?.client ?? client).get<AuthUsersListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/',
        ...options
    });
};

export const authUsersCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersDestroy = <ThrowOnError extends boolean = false>(options: Options<AuthUsersDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<AuthUsersDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/{id}/',
        ...options
    });
};

export const authUsersRetrieve = <ThrowOnError extends boolean = false>(options: Options<AuthUsersRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<AuthUsersRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/{id}/',
        ...options
    });
};

export const authUsersPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<AuthUsersPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersUpdate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<AuthUsersUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersActivationCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersActivationCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersActivationCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/activation/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersMeDestroy = <ThrowOnError extends boolean = false>(options?: Options<AuthUsersMeDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AuthUsersMeDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/me/',
        ...options
    });
};

export const authUsersMeRetrieve = <ThrowOnError extends boolean = false>(options?: Options<AuthUsersMeRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<AuthUsersMeRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/me/',
        ...options
    });
};

export const authUsersMePartialUpdate = <ThrowOnError extends boolean = false>(options?: Options<AuthUsersMePartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AuthUsersMePartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/me/',
        ...options
    });
};

export const authUsersMeUpdate = <ThrowOnError extends boolean = false>(options?: Options<AuthUsersMeUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<AuthUsersMeUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/me/',
        ...options
    });
};

export const authUsersResendActivationCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersResendActivationCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersResendActivationCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/resend_activation/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersResetPasswordCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersResetPasswordCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersResetPasswordCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/reset_password/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersResetPasswordConfirmCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersResetPasswordConfirmCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersResetPasswordConfirmCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/reset_password_confirm/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersResetUsernameCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersResetUsernameCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersResetUsernameCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/reset_username/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersResetUsernameConfirmCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersResetUsernameConfirmCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersResetUsernameConfirmCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/reset_username_confirm/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersSetPasswordCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersSetPasswordCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersSetPasswordCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/set_password/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const authUsersSetUsernameCreate = <ThrowOnError extends boolean = false>(options: Options<AuthUsersSetUsernameCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<AuthUsersSetUsernameCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/users/set_username/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCheckFizClientCreditworthinessCreate = <ThrowOnError extends boolean = false>(options: Options<CreditCheckFizClientCreditworthinessCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditCheckFizClientCreditworthinessCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/check-fiz-client-creditworthiness/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreateCreditPayoffCreate = <ThrowOnError extends boolean = false>(options: Options<CreditCreateCreditPayoffCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditCreateCreditPayoffCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/create-credit-payoff/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditList = <ThrowOnError extends boolean = false>(options?: Options<CreditCreditListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditCreditListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit/',
        ...options
    });
};

export const creditCreditCreate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditCreditCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditPaymentList = <ThrowOnError extends boolean = false>(options?: Options<CreditCreditPaymentListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditCreditPaymentListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payment/',
        ...options
    });
};

export const creditCreditPaymentCreate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPaymentCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditCreditPaymentCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payment/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditPaymentDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPaymentDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditCreditPaymentDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payment/{id}/',
        ...options
    });
};

export const creditCreditPaymentRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPaymentRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditCreditPaymentRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payment/{id}/',
        ...options
    });
};

export const creditCreditPaymentPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPaymentPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditCreditPaymentPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payment/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditPaymentUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPaymentUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditCreditPaymentUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payment/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditPayoffList = <ThrowOnError extends boolean = false>(options?: Options<CreditCreditPayoffListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditCreditPayoffListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payoff/',
        ...options
    });
};

export const creditCreditPayoffCreate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPayoffCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditCreditPayoffCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payoff/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditPayoffDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPayoffDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditCreditPayoffDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payoff/{id}/',
        ...options
    });
};

export const creditCreditPayoffRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPayoffRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditCreditPayoffRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payoff/{id}/',
        ...options
    });
};

export const creditCreditPayoffPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPayoffPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditCreditPayoffPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payoff/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditPayoffUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPayoffUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditCreditPayoffUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit-payoff/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditCreditDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditCreditDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit/{id}/',
        ...options
    });
};

export const creditCreditRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditCreditRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditCreditRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit/{id}/',
        ...options
    });
};

export const creditCreditPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditCreditPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditCreditUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditCreditUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditCreditUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/credit/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditFizClientList = <ThrowOnError extends boolean = false>(options?: Options<CreditFizClientListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditFizClientListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/fiz-client/',
        ...options
    });
};

export const creditFizClientCreate = <ThrowOnError extends boolean = false>(options: Options<CreditFizClientCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditFizClientCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/fiz-client/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditFizClientDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditFizClientDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditFizClientDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/fiz-client/{id}/',
        ...options
    });
};

export const creditFizClientRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditFizClientRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditFizClientRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/fiz-client/{id}/',
        ...options
    });
};

export const creditFizClientPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditFizClientPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditFizClientPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/fiz-client/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditFizClientUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditFizClientUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditFizClientUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/fiz-client/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditPledgeList = <ThrowOnError extends boolean = false>(options?: Options<CreditPledgeListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditPledgeListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/pledge/',
        ...options
    });
};

export const creditPledgeCreate = <ThrowOnError extends boolean = false>(options: Options<CreditPledgeCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditPledgeCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/pledge/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditPledgeDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditPledgeDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditPledgeDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/pledge/{id}/',
        ...options
    });
};

export const creditPledgeRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditPledgeRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditPledgeRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/pledge/{id}/',
        ...options
    });
};

export const creditPledgePartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditPledgePartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditPledgePartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/pledge/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditPledgeUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditPledgeUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditPledgeUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/pledge/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingAcraList = <ThrowOnError extends boolean = false>(options?: Options<CreditRatingAcraListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditRatingAcraListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-acra/',
        ...options
    });
};

export const creditRatingAcraCreate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingAcraCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditRatingAcraCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-acra/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingAcraDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditRatingAcraDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditRatingAcraDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-acra/{id}/',
        ...options
    });
};

export const creditRatingAcraRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditRatingAcraRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditRatingAcraRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-acra/{id}/',
        ...options
    });
};

export const creditRatingAcraPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingAcraPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditRatingAcraPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-acra/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingAcraUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingAcraUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditRatingAcraUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-acra/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingExpertList = <ThrowOnError extends boolean = false>(options?: Options<CreditRatingExpertListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditRatingExpertListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-expert/',
        ...options
    });
};

export const creditRatingExpertCreate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingExpertCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditRatingExpertCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-expert/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingExpertDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditRatingExpertDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditRatingExpertDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-expert/{id}/',
        ...options
    });
};

export const creditRatingExpertRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditRatingExpertRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditRatingExpertRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-expert/{id}/',
        ...options
    });
};

export const creditRatingExpertPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingExpertPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditRatingExpertPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-expert/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingExpertUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingExpertUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditRatingExpertUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-expert/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingNcrList = <ThrowOnError extends boolean = false>(options?: Options<CreditRatingNcrListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditRatingNcrListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-ncr/',
        ...options
    });
};

export const creditRatingNcrCreate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNcrCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditRatingNcrCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-ncr/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingNcrDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNcrDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditRatingNcrDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-ncr/{id}/',
        ...options
    });
};

export const creditRatingNcrRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNcrRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditRatingNcrRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-ncr/{id}/',
        ...options
    });
};

export const creditRatingNcrPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNcrPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditRatingNcrPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-ncr/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingNcrUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNcrUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditRatingNcrUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-ncr/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingNraList = <ThrowOnError extends boolean = false>(options?: Options<CreditRatingNraListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditRatingNraListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-nra/',
        ...options
    });
};

export const creditRatingNraCreate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNraCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditRatingNraCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-nra/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingNraDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNraDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditRatingNraDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-nra/{id}/',
        ...options
    });
};

export const creditRatingNraRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNraRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditRatingNraRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-nra/{id}/',
        ...options
    });
};

export const creditRatingNraPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNraPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditRatingNraPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-nra/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRatingNraUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditRatingNraUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditRatingNraUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/rating-nra/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditRestructureCreditCreate = <ThrowOnError extends boolean = false>(options: Options<CreditRestructureCreditCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditRestructureCreditCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/restructure-credit/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditUrClientList = <ThrowOnError extends boolean = false>(options?: Options<CreditUrClientListData, ThrowOnError>) => {
    return (options?.client ?? client).get<CreditUrClientListResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/ur-client/',
        ...options
    });
};

export const creditUrClientCreate = <ThrowOnError extends boolean = false>(options: Options<CreditUrClientCreateData, ThrowOnError>) => {
    return (options.client ?? client).post<CreditUrClientCreateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/ur-client/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditUrClientDestroy = <ThrowOnError extends boolean = false>(options: Options<CreditUrClientDestroyData, ThrowOnError>) => {
    return (options.client ?? client).delete<CreditUrClientDestroyResponses, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/ur-client/{id}/',
        ...options
    });
};

export const creditUrClientRetrieve = <ThrowOnError extends boolean = false>(options: Options<CreditUrClientRetrieveData, ThrowOnError>) => {
    return (options.client ?? client).get<CreditUrClientRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/ur-client/{id}/',
        ...options
    });
};

export const creditUrClientPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditUrClientPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? client).patch<CreditUrClientPartialUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/ur-client/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const creditUrClientUpdate = <ThrowOnError extends boolean = false>(options: Options<CreditUrClientUpdateData, ThrowOnError>) => {
    return (options.client ?? client).put<CreditUrClientUpdateResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/credit/ur-client/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * OpenApi3 schema for this API. Format can be selected via content negotiation.
 *
 * - YAML: application/vnd.oai.openapi
 * - JSON: application/vnd.oai.openapi+json
 */
export const schemaRetrieve = <ThrowOnError extends boolean = false>(options?: Options<SchemaRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<SchemaRetrieveResponses, unknown, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/schema/',
        ...options
    });
};
